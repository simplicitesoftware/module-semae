#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: SEMAE 0.1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    SemDeclaration:
      type: object
      properties:
        semDeclarationWeight:
          description: Weight
          type: string
        semDeclarationValidationStatus:
          description: Status
          type: string
          enum:
          - PEN
          - VAL
          - REJ
        semDeclarationComment:
          description: Comment
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        semDeclarationIdentifier:
          description: Identifier
          type: string
    SemAccount:
      type: object
      properties:
        semAccClientNumber:
          description: CD varchar(50) N° de client
          type: string
        semAccAe:
          description: AE Number
          type: string
        semAccSoc:
          description: VAR2 varchar(30) n° SOC
          type: string
        semAccCorporateName:
          description: SOCIETE varchar(50) Raison sociale
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        semAccExternalIdentifier:
          description: NRID decimal(15,0) Identifiant unique (interne au CRM)
          type: string
    ArrayOfSemDeclaration:
      type: array
      items:
        $ref: '#/components/schemas/SemDeclaration'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    PlaceData:
      type: object
      properties:
        coord:
          description: Geographical coordinates
          type: string
        address:
          description: Address
          type: string
        row_id:
          description: Row ID
          type: string
        label1:
          description: 'Label #1'
          type: string
        label2:
          description: 'Label #2'
          type: string
        label3:
          description: 'Label #3'
          type: string
    ArrayOfSemAccount:
      type: array
      items:
        $ref: '#/components/schemas/SemAccount'
    PlaceMapData:
      type: object
      properties:
        places:
          description: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceData'
        name:
          description: Name
          type: string
    SemSpecies:
      type: object
      properties:
        row_id:
          description: Unique technical row ID
          type: string
        semSpeciesKey:
          description: ESPECE char(3) Clé unique
          type: string
        semSpeciesLabel:
          description: Label
          type: string
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    ArrayOfSemExternalColaborator:
      type: array
      items:
        $ref: '#/components/schemas/SemExternalColaborator'
    ArrayOfSemSpecies:
      type: array
      items:
        $ref: '#/components/schemas/SemSpecies'
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    SemExternalColaborator:
      type: object
      properties:
        row_module_id__mdl_name:
          description: Module name
          type: string
        usr_image_id:
          description: Picture
          type: object
        usr_email:
          description: Email address
          type: string
        usr_active:
          description: Active
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
        row_module_id:
          description: Module
          type: string
        usr_login:
          description: Login
          type: string
        usr_home_id__viw_name:
          description: Home page Name
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_lang:
          description: Language
          type: string
          enum:
          - ENU
          - FRA
        row_id:
          description: Unique technical row ID
          type: string
        usr_home_id:
          description: Home page
          type: string
        usr_first_name:
          description: First name
          type: string
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
servers:
- url: /api
openapi: 3.0.2
paths:
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/SemExternalColaborator:
    get:
      summary: Search SemExternalColaborator business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-semexternalcolaborator-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSemExternalColaborator'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: usr_image_id
        description: Search filter for Picture
        required: false
      - schema:
          type: string
        in: query
        name: usr_login
        description: Search filter for Login
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
          enum:
          - ENU
          - FRA
        in: query
        name: usr_lang
        description: Search filter for Language
        required: false
      - schema:
          type: string
        in: query
        name: usr_email
        description: Search filter for Email address
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
        in: query
        name: usr_active
        description: Search filter for Active
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_id
        description: Search filter for Home page
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_id__viw_name
        description: Search filter for Home page Name
        required: false
      - schema:
          type: string
        in: query
        name: row_module_id
        description: Search filter for Module
        required: false
      - schema:
          type: string
        in: query
        name: row_module_id__mdl_name
        description: Search filter for Module name
        required: false
      tags:
      - SemExternalColaborator
  /rest/SemDeclaration:
    get:
      summary: Search SemDeclaration business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-semdeclaration-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSemDeclaration'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: semDeclarationIdentifier
        description: Search filter for Identifier
        required: false
      - schema:
          type: string
        in: query
        name: semDeclarationWeight
        description: Search filter for Weight
        required: false
      - schema:
          type: string
          enum:
          - PEN
          - VAL
          - REJ
        in: query
        name: semDeclarationValidationStatus
        description: Search filter for Status
        required: false
      - schema:
          type: string
        in: query
        name: semDeclarationComment
        description: Search filter for Comment
        required: false
      tags:
      - SemDeclaration
  /rest/SemDeclaration/{row_id}:
    post:
      summary: Create a new SemDeclaration business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemDeclaration'
      operationId: obj-semdeclaration-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemDeclaration'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemDeclaration
    get:
      summary: Get a SemDeclaration business object record
      security:
      - bearerAuth: []
      operationId: obj-semdeclaration-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemDeclaration'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SemDeclaration
    delete:
      summary: Delete a SemDeclaration business object record
      security:
      - bearerAuth: []
      operationId: obj-semdeclaration-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemDeclaration
    put:
      summary: Update a SemDeclaration business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemDeclaration'
      operationId: obj-semdeclaration-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemDeclaration'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemDeclaration
  /rest/SemSpecies/{row_id}:
    post:
      summary: Create a new SemSpecies business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemSpecies'
      operationId: obj-semspecies-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemSpecies'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemSpecies
    get:
      summary: Get a SemSpecies business object record
      security:
      - bearerAuth: []
      operationId: obj-semspecies-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemSpecies'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SemSpecies
    delete:
      summary: Delete a SemSpecies business object record
      security:
      - bearerAuth: []
      operationId: obj-semspecies-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemSpecies
    put:
      summary: Update a SemSpecies business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemSpecies'
      operationId: obj-semspecies-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemSpecies'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemSpecies
  /rest/SemAccount/{row_id}:
    post:
      summary: Create a new SemAccount business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemAccount'
      operationId: obj-semaccount-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemAccount'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemAccount
    get:
      summary: Get a SemAccount business object record
      security:
      - bearerAuth: []
      operationId: obj-semaccount-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemAccount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SemAccount
    delete:
      summary: Delete a SemAccount business object record
      security:
      - bearerAuth: []
      operationId: obj-semaccount-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemAccount
    put:
      summary: Update a SemAccount business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemAccount'
      operationId: obj-semaccount-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemAccount'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemAccount
  /rest/SemSpecies:
    get:
      summary: Search SemSpecies business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-semspecies-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSemSpecies'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: semSpeciesKey
        description: Search filter for ESPECE char(3) Clé unique
        required: false
      - schema:
          type: string
        in: query
        name: semSpeciesLabel
        description: Search filter for Label
        required: false
      tags:
      - SemSpecies
  /rest/SemExternalColaborator/{row_id}:
    post:
      summary: Create a new SemExternalColaborator business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemExternalColaborator'
      operationId: obj-semexternalcolaborator-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemExternalColaborator'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemExternalColaborator
    get:
      summary: Get a SemExternalColaborator business object record
      security:
      - bearerAuth: []
      operationId: obj-semexternalcolaborator-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemExternalColaborator'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SemExternalColaborator
    delete:
      summary: Delete a SemExternalColaborator business object record
      security:
      - bearerAuth: []
      operationId: obj-semexternalcolaborator-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemExternalColaborator
    put:
      summary: Update a SemExternalColaborator business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemExternalColaborator'
      operationId: obj-semexternalcolaborator-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemExternalColaborator'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SemExternalColaborator
  /rest/SemAccount:
    get:
      summary: Search SemAccount business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-semaccount-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSemAccount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: semAccExternalIdentifier
        description: Search filter for NRID decimal(15,0) Identifiant unique (interne
          au CRM)
        required: false
      - schema:
          type: string
        in: query
        name: semAccClientNumber
        description: Search filter for CD varchar(50) N° de client
        required: false
      - schema:
          type: string
        in: query
        name: semAccSoc
        description: Search filter for VAR2 varchar(30) n° SOC
        required: false
      - schema:
          type: string
        in: query
        name: semAccAe
        description: Search filter for AE Number
        required: false
      - schema:
          type: string
        in: query
        name: semAccCorporateName
        description: Search filter for SOCIETE varchar(50) Raison sociale
        required: false
      tags:
      - SemAccount
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module SEMAE
  title: SEMAE
  version: '0.1'
tags:
- name: SemAccount
  description: Account
- name: SemDeclaration
  description: Declaration
- name: SemExternalColaborator
  description: External colaborator
- name: SemSpecies
  description: Species
